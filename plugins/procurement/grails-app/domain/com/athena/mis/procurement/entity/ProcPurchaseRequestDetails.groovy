/**
 * Module Name - Procurement
 * Purpose - Entity of procurement purchase request details information
 * */

package com.athena.mis.procurement.entity

import com.athena.mis.utility.Tools

class ProcPurchaseRequestDetails {
    long id                     // primary key (Auto generated by its own sequence)
    int version
    long purchaseRequestId      // ProcPurchaseRequest.id (Parent)
    long projectId              // Project.id (Redundant)
    Date createdOn              // Object Creation DateTime
    long createdBy              // AppUser.id
    Date updatedOn              // Object updated DateTime
    long updatedBy              // AppUser.id
    String comments
    long itemId                 // Item.id
    double quantity             // Quantity of item
    double poQuantity           // quantity acquired by ProcPurchaseOrderDetails
    double rate
    long companyId              // Company.id

    static mapping = {
        id generator: 'sequence', params: [sequence: 'proc_purchase_request_details_id_seq']
        quantity sqlType: "numeric(16,4)"
        poQuantity sqlType: "numeric(16,4)"
        rate sqlType: "numeric(16,4)"

        purchaseRequestId index: 'proc_purchase_request_details_purchase_request_id_idx'
        projectId index: 'proc_purchase_request_details_project_id_idx'
        companyId index: 'proc_purchase_request_details_company_id_idx'
        createdBy index: 'proc_purchase_request_details_created_by_idx'
        updatedBy index: 'proc_purchase_request_details_updated_by_idx'
        itemId index: 'proc_purchase_request_details_item_id_idx'

    }

    static constraints = {
        projectId(nullable: false)
        purchaseRequestId(nullable: false)
        createdOn(nullable: false)
        createdBy(nullable: false)
        updatedOn(nullable: true)
        comments(nullable: true)
        quantity(nullable: false)
        rate(nullable: false)
        companyId(nullable: false)
    }

    static namedQueries = {
        search { long purchaseRequestId, String queryType, String queryName ->
            eq('purchaseRequestId', purchaseRequestId)
            ilike(queryType, Tools.PERCENTAGE + queryName + Tools.PERCENTAGE)
        }
    }
}
