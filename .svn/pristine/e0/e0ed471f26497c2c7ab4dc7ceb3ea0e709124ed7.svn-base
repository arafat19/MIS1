/**
 * Module  - Project Track
 * Purpose - Entity that contains all properties of PtBug
 */

package com.athena.mis.projecttrack.entity

class PtBug {
    long id                     // primary key (Auto generated by its own sequence)
    int version
    String title                // Title of Bug
    String stepToReproduce      // Step to reproduce
    long status                 // SystemEntity.id
    long severity               // SystemEntity.id
    long type                   // SystemEntity.id
    long companyId              // Company.id
    long backlogId              // PtBacklog.id
    Date createdOn              // Object creation DateTime
    long createdBy              // AppUser.id
    Date updatedOn              // Object update DateTime
    long updatedBy              // AppUser.id
    long moduleId               // PtModule.id
    long sprintId               // PtSprint.id
    long projectId              // PtProject.id
    String note                 // note
    boolean hasAttachment       // boolean value (true/false)
    Date statusUpdatedOn        // status update DateTime
    long statusUpdatedBy        // AppUser.id
    Date fixedOn                // Bug fixing DateTime
    long fixedBy                // AppUser.id
    Date closedOn               // Bug closing DateTime
    long closedBy               // AppUser.id
    long ownerId                // AppUser.id

    static mapping = {
        id generator: 'sequence', params: [sequence: 'pt_bug_id_seq']
        status index: 'pt_bug_status_idx'
        severity index: 'pt_bug_severity_idx'
        type index: 'pt_bug_type_idx'
        companyId index: 'pt_bug_company_id_idx'
        backlogId index: 'pt_bug_backlog_id_idx'
        createdBy index: 'pt_bug_created_by_id_idx'
        updatedBy index: 'pt_bug_updated_by_id_idx'
        ownerId index: 'pt_bug_owner_id_idx'
    }

    static constraints = {
        updatedOn(nullable: true)
        fixedOn(nullable: true)
        closedOn(nullable: true)
        note(nullable: true)
        statusUpdatedOn(nullable: true)
    }
}
